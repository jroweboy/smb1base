; This file is for the FamiStudio Sound Engine and was generated by FamiStudio
; Project uses MMC5 expansion, you must set FAMISTUDIO_EXP_MMC5 = 1.
; Volume track is used, you must set FAMISTUDIO_USE_VOLUME_TRACK = 1.
; Project has DPCM bank-switching enabled in the project settings, you must set FAMISTUDIO_USE_DPCM_BANKSWITCHING = 1 and implement bank switching.

.if FAMISTUDIO_CFG_C_BINDINGS
.export _music_data_in_an_other_castle=music_data_in_an_other_castle
.endif

music_data_in_an_other_castle:
	.byte 1
	.word @instruments
	.word @samples-5
; 00 : In an other castle
	.word @song0ch0
	.word @song0ch1
	.word @song0ch2
	.word @song0ch3
	.word @song0ch4
	.word @song0ch5
	.word @song0ch6
	.byte .lobyte(@tempo_env_1_mid), .hibyte(@tempo_env_1_mid), 0, 0

.export music_data_in_an_other_castle
.global FAMISTUDIO_DPCM_PTR

@instruments:
	.word @env5,@env2,@env6,@env0 ; 00 : Long instrumental
	.word @env3,@env2,@env4,@env0 ; 01 : Noise short
	.word @env1,@env2,@env4,@env0 ; 02 : Drums Sus

@env0:
	.byte $00,$c0,$7f,$00,$02
@env1:
	.byte $00,$ce,$cc,$ca,$c8,$c6,$c3,$c2,$00,$07
@env2:
	.byte $c0,$7f,$00,$01
@env3:
	.byte $00,$cf,$c0,$00,$02
@env4:
	.byte $7f,$00,$00
@env5:
	.byte $00,$c5,$c3,$c4,$c5,$c5,$c6,$10,$c5,$05,$c4,$05,$c3,$02,$c2,$c2,$c1,$c0,$00,$11
@env6:
	.byte $c0,$c2,$00,$01

@samples:

@tempo_env_1_mid:
	.byte $03,$05,$80

@song0ch0:
	.byte $7c, $80, $1d, $8f, $00, $a1, $19, $8f, $00, $a1, $14, $a1, $1e, $c5, $1b, $c5, $1d, $8f, $1b, $8f, $1d, $e9, $00, $ff
	.byte $ff, $ff, $83
@song0ch0loop:
	.byte $47, .lobyte(@tempo_env_1_mid), .hibyte(@tempo_env_1_mid), $c7, $42
	.word @song0ch0loop
@song0ch1:
	.byte $7c, $80, $25, $8f, $00, $a1, $20, $8f, $00, $a1, $1d, $a1, $21, $95, $23, $95, $21, $95, $20, $95, $22, $95, $20, $95
	.byte $20, $ff, $ff, $ff, $ff, $93
@song0ch1loop:
	.byte $c7, $42
	.word @song0ch1loop
@song0ch2:
	.byte $80, $0d, $a1, $19, $a1, $0d, $a1, $19, $a1, $15, $a1, $21, $a1, $17, $a1, $23, $a1, $25, $ff, $ff, $ff, $ff, $93
@song0ch2loop:
	.byte $c7, $42
	.word @song0ch2loop
@song0ch3:
	.byte $82
@song0ref100:
	.byte $20, $a1, $20, $8f, $20, $a1, $20, $8f, $20, $a1, $7b, $84, $1a, $89, $00, $89, $74, $1a, $95, $75, $19, $83, $74, $00
	.byte $8f, $19, $8f, $73, $17, $8f, $17, $8f, $74, $17, $8f, $7f, $82, $20, $a1, $20, $8f, $20, $a1, $20, $8f, $20, $8f, $20
	.byte $8f
	.byte $41, $21
	.word @song0ref100
	.byte $ad
@song0ch3loop:
	.byte $c7, $42
	.word @song0ch3loop
@song0ch4:
	.byte $ff, $ff, $ff, $ff, $ff, $ff, $b5
@song0ch4loop:
	.byte $c7, $42
	.word @song0ch4loop
@song0ch5:
	.byte $ff, $ff, $ff, $ff, $ff, $ff, $b5
@song0ch5loop:
	.byte $c7, $42
	.word @song0ch5loop
@song0ch6:
	.byte $ff, $ff, $ff, $ff, $ff, $ff, $b5
@song0ch6loop:
	.byte $c7, $42
	.word @song0ch6loop
