If you've used an earlier version of nesst before, most controls should feel familiar. 
Below is a list of new actions that aren't as obvious from the interface itself, as well as some advice. 
This document is a stopgap between here and condensing my devlogs into a consise user manual. 

Checkpoint feature:
===================
One of the better (imo) additions is the checkpoint feature. I use it as such:
When my work is in a good state, and i'm temporarily happy with it, i set the checkpoint (ctrl+shift+z). 
I also set the checkpoint when i think i'm about to do a series of actions i'm not sure if i want to keep. 
Then i edit for a while, and hit "revert to checkpoint" (shift-z) to compare the change. I can toggle back and forth between the checkpoint and the current state by hitting shift-z repeatedly. if i'm happy with the change, i go back to the current state. if not, i stay in the recalled state. 
It is also possible to bring things from the past into the present, and things from the present into a generally more preferred past this way. 

For me, this is a more time effective way of working compared to undo stacks of old, although their uses are not completely overlapping. 


Multi-Drag & Screen canvas Drag:
==========
In NESST, you could drag 1 tile at a time to swap it. 
To make things smoother, NEXXT is able to drag a box selection of tiles.
This is also possible on the screen canvas/nametable. In addition to the swap mode, you can also clone and move/replace. 
Lastly, it's possible to drag the selection box itself around without affecting contents; in case you misplaced it. 
Check the status readout for details when having made a selection.

8x16 sprite mode and other view modes:
======================================
As of 0.22, you can now view and edit tiles in arrangements that are decoupled from physical memory. NEXXT keeps track of which tile goes where. 
This enables, most notably, conveniently working with 8x16 sprites, or viewing tiles as sorted according to different criteria.


Brush:
======
The pen is now toggleable with a brush [B or Shift+B depending on context], whose mask is editable [M or Shift+F4 depending on context].
The brush is supported by a quantized penstroke mode. 

Line:
=====
The line can draw a plethora of shapes from a few algorithmic fundamental elements: line, curve, knee, and right angle.
While dragging to plot the line, use the scroll wheel to switch between algorithms. 
You can also hold ctrl while scrolling to change the origin y coordinate, ctrl+alt to change its x coordinate, and just alt to change a parameter special to the current algorithm (exactly which may be subject to change).
The line toolbox offers several additional controls. 

Smudge:
=======
A helpful mode that works on top of most other drawing tool. When you click on a pixel, that pixels' colour becomes your temporary colour (without changing your permanent colour selection). 
Work your way outwards. This is helpful to define borders between colours or the shape of fields/clusters without having to think about which colour to switch to. 

Application masks:
==================
You can protect certain colours from being drawn or pasted over, and you can edit the bitplanes individually.
Colour protection masks allows you to "draw behind" chosen colours.

Lightbox feature:
====================
Far from essential, but occasionally useful: if you hit the PAUSE key on your keyboard, nexxt will become transparent. This can be used to peek quickly what's behind, or to emphasize that this instance of nesst is set aside, or you could even use it as a lightbox to trace something.
NEW: This feature is now exposed in the windows menu, and you can set it individually for the main and chr editor.

CHR Editor:
===========
shift click to make the pen draw a "brighter" colour than the one below it. i say "brighter" because it depends on how you order your palettes. 
shift+alt click to make the pen draw a "darker" colour than the one below it. 

This also applies to the fill bucket (ctrl+click). if you hold while clicking ctrl+shift or ctrl+shift+alt, you can drag the mouse around to see the effect on different fields before committing. 

There are settings under the "draw" menu to fine tune how the relative pens work to your taste. 

The value +/- button controls makes the whole tile "brighter" or "darker".

The bit1 and bit0 checkboxes act as filters for the 2 bitplanes of a nes tile. if unchecking one of them, that bitplane will get ignored when drawing, pasting, rotating, mirroring, or nudging a tile. 

wasd have replaced arrow keys for nudging, since it is closer to the vacant hand. arrows are instead moving between the 4 checkbox options. you can hit spacebar to toggle a checkbox on or off. 

Main window (nametable tab):
===========
V clicking on the tileset or the nametable/map is a quicker way to paste things into place
V clicking also works on individual subpalettes. If a whole palette set is on the clipboard, you can v-click repeatedly to cycle through the contents of the clipboard - or, if you want, reorder the contents by clicking on the different subpalettes in your preferred order. 

TypeIn mode now observes carriage return (enter). it will return the cursor to the point last selected before entering TypeIn mode. You can also set a new carriage return point from the main menu. 

The so called "null tile" control just below the tileset specifies the tile which NEXXT will use to replace things you cut or delete from the nametable/map. 
It can be considered a virtual backdrop tile of sorts. you can move it independently by click-dragging over the control, or just view which tile is the null tile by clicking and holding. The "null" property moves along when you drag a tile to another place that happens to be the null tile. 
Some actions can be made to consider the null tile. for example, if you make a metasprite from tiles on the nametable, you can select to ignore null tiles from being included. Similarly, you can ignore letting null tiles be pasted.

R,G,B & M emphasis modes are directly toggleable with corresponding keys as long as the CHR window isn't active. You can still reach these features with their clobal shortcuts regardless which window is active. 

Metasprite editor:
==================
I've heard on the grapevine that a more powerful nes sprite editor/animator is in development, so i haven't focused as much on bringing improvements to this section. 
For now, there are some additions:

-H & V hotkeys will toggle h and v bits on/off for selected sprites
-holding shift while using arrow keys will nudge selected sprites 8 pixels instead of 1.
-ctrl+c,x,v will refer to whole metasprites while this tab is active - for now. A future revision might change this to selected sprites within a metasprite. 
-to make the above work, copying/pasting on the chr table while on this currently disabled  - for now. this might also change later to a "last clicked on" type of concept. 
-select all/deselect will work on the sprite list. 
-delete will act on selected items on the sprite list.

some other things are planned, but pretty low on priority compared to other features.

Caveats and fair warnings: 
==========================

-There may still be some papercuts in the beta build. From subtle things like changing terminology and experimental UI, to behavioral bugs,
to more serious things like unhandled exceptions. Save your work regularly, just to be sure. 

-shortcuts and hotkeys may change at any time between versions until i reach a more stable gui philosophy.


Half-complete features
======================

An animation feature is being planned and prepared for, but not yet ready for implementation.
