

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; Easy edit options for controlling the basic feature set available

;; 
;; IMPORTANT TUTORIAL ON HOW TO USE THIS FILE
;;

; Each line will have a setting and a description for what that setting does.
; IF A LINE STARTS WITH A SEMI COLON (;) THEN IT IS A COMMENT AND WILL NOT BE SET
; That means if you see a line that says
;
; MAPPER_MMC5=1
;
; because it has a ; in front of it, it WILL NOT BE ACTIVE
; Putting a ; in front of a line is equivalent to setting that value to 0

; When turning on an option, use the name=value without spaces between the name/value and the equals sign =
; This is a known limitation of the ini format and why I plan to move away from it someday.

; If you don't understand what an option means, then its best to ignore it for now. We chose solid defaults
; for each option that will give you the most configurability out of the box without adding too much complexity.


;;;;;;;;;;;;;;;;;;;;;;
[GENERAL]

; Add in backported features such as new sfx and wind from SMB2J
; NOTE: Not all features are backported yet.
; USE_SMB2J_FEATURES=1

; Mapper MMC5 is a more powerful mapper, but may have some compatibility issues with older emulators
; and powerpaks that aren't using the latest mapper set.
; It still has very high compatibility, and with the extra features and audio channels, its the recommended option
MAPPER_MMC5=1

; Mapper MMC3 is the most compatible while still being reasonable feature rich target. Enabling this will reduce
; the amount of CHR available, so its only included for scenarios like making a repro cart and can work around the
; missing features.
; MAPPER_MMC3=1

; To try and make some tasks a bit easier, you can enable C compiler support through CC65. There are a handful of
; calbacks that you can implement in C to make changes to the game in a higher level language for rapid development.
;ENABLE_C_CODE=1

; Draw and run the title screen using C code (in title.c) instead of ASM
;USE_CUSTOM_TITLESCREEN=1

; Enable PowerUps and Flags to spawn on slot others than the special slot (slot 6)
MULTIPLE_POWERUPS_ON_SCREEN=1

; Instead of player animation cycles going 1, 2, 3, 1, 2 ,3 changes them to go backwards
; instead of looping. So for a 3 cycle anim it will do 1, 2, 3, 2, 1, 2, 3, 2, 1
;USE_LOOPING_ANIM_CYCLE=1

;;;;;;;;;;;;;;;;;;;;;;
[AUDIO]

; ---- MUSIC ----
; Enable one of the follow music engines by uncommenting the one you want to use

; Use the original game audio engine for music
; USE_VANILLA_MUSIC=1

; Use the Famistudio engine for music.
; SEE the file `driver_famistudio.s` for more instructions on how to use this
USE_FAMISTUDIO_MUSIC=1

; When using a custom audio engine with banked dpcm, you will need to specify here how many banks you are using
; If you aren't using DPCM, set it to 0.
; If you are using DPCM but not banked, set it to 1.
; If you are using banked dpcm, set it to however many banks you have.
DPCM_BANK_COUNT=1


; ---- SFX ----
; Use the original SFX audio engine.
USE_VANILLA_SFX=1

; Use the custom music engine for SFX. Cannot be used with the vanilla music engine
; USE_CUSTOM_ENGINE_SFX=1


; ---- EXTRA ----
; If using famistudio or famitone engines and the MMC5 mapper, you can use the extra audio channels on the MMC5
; USE_MMC5_AUDIO=1

; If using famistudio or famitone engines and the VRC7 mapper, you can use the extra audio channels on the MMC5
; USE_VRC7_AUDIO=1


; ---- CUSTOM AUDIO CONFIGURATION ----
; If you are using a custom audio engine, then you likely need to add some configuration here too then
; For Famistudio, see `driver_famistudio` for more details. The settings below are for the `disco_mario`
; sample music and will very likely not work for your project.

FAMISTUDIO_CFG_DPCM_SUPPORT=1
FAMISTUDIO_EXP_MMC5=1
FAMISTUDIO_USE_VOLUME_TRACK=1
FAMISTUDIO_USE_PITCH_TRACK=1

;;;;;;;;;;;;;;;;;;;;;;
[MOUSE]

; Enable reading the SNES mouse plugged into port 2 instead of using a second player.
; This will certainly break the vanilla 2 player mode.
USE_MOUSE_SUPPORT=0
;USE_MOUSE_SUPPORT=1

; Add a cursor to the screen where the mouse is (pointer is located at the X,Y coord for it)
;MOUSE_DISPLAY_CURSOR=1

; Change this option to 2 to read the mouse from the second controller port instead of port 1
; The controller will be read from the other port.
MOUSE_READ_FROM_PORT=1

; 1 or 2 bytes. Change to 2 to allow using the SNES controller extra buttons like L/R
MOUSE_CONFIG_CONTROLLER_SIZE=1
; 1: Allow mouse sensitivity to be clocked. 0: Disable.
MOUSE_CONFIG_SENSITIVITY=0
; Bounds for the mouse (min 1 - max 255) The defaults are provided for a reasonable "on screen" representation
MOUSE_X_MINIMUM=1
MOUSE_X_MAXIMUM=255
MOUSE_Y_MINIMUM=1
MOUSE_Y_MAXIMUM=239

;;;;;;;;;;;;;;;;;;;;;;
[DEBUG]

; Enable DEBUG_WORLD_SELECT to turn on world select. When in the level loading screen, press b to increase the level number and
; press a to increase the world number.
DEBUG_WORLD_SELECT=1

; Enable to print out all metasprite IDs when compiling. This can be useful to help when debugging
; or need to update the C headers
; PRINT_METASPRITE_IDS=1

; DO NOT USE - Adds extra lag for testing frame lag hiding code.
; Set to the value of number of cycles to burn
; DEBUG_ADD_EXTRA_LAG=5000

; Enable to show a red overlay on the screen that is a visual estimate for how long it took
; to process the frame. The larger the red overlay, the more time it took to process the frame
; DEBUG_DISPLAY_VISUAL_FRAMETIME=1
